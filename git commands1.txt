###
 	3 Stages in Git:
1. Working copy
2. Staging area
3. Git repository


General setup
	>git config --global user.name "Hem Rai"
	>git config --global user.email "hemchandrarai007@gmail"
	>git config --list (this list all the above infos)
	>git config config user.email( gives hemchandrarai007@gmail)

commiting single file/Commit changes to head (but not yet to the remote repository):
- git commit haha.txt -m "Commiting single file haha.txt"

commiting into repository
- git commit -m "directly commiting into repository"


hard commit/Commit any files you've added with git add, 
and also commit any files skipping the staging(git add) process (this file should be 
an existing but a modified file)

- git commit -am "directly commiting into repository"

checking out for repository/ undoing changes made in the working copy
-git checkout -- <filename.txt>

Unstaging/ removing from staging area to working copy area
-git reset HEAD <filename.txt>

16 - Getting Old Versions from the Repository to the working copy
	1. first check the git log then notice the which point 
 		of time/commit id you want to return to 
	2. -git checkout <first few character of the commit id> -- <filename.txt>
			-this will replace the exiting file and replace it witholder
				version which you have checked out 


For pulling out recent copy from github/syncronizing github repo and your local repo
-if it says "Already up to date" then you have the recent copy from github
>git pull

-this is diff from clone, which is for pulling fresh/new copy from git hub
>git clone <url of git repo>